{
    "stack": [
        {
            "ID": "43",
            "name": "Firebase",
            "details": "<p>Firebase is a cloud service designed to power real-time, collaborative applications. Simply <a href=\"https://www.firebase.com/docs/index.html\">add the Firebase library</a> to your application to gain access to a shared data structure; any changes you make to that data are automatically synchronized with the Firebase cloud and with other clients within milliseconds. Apps built with Firebase can be written entirely with client-side JavaScript, update in real-time out-of-the-box, interoperate well with existing services, scale automatically, and provide <a href=\"https://www.firebase.com/docs/security-quickstart.html\">strong data security</a>.</p>\n<div><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://www.firebase.com/images/firebase-network-diagram.jpg\" alt=\"\" /></div>\n<p>Firebase is designed to help you build great apps quickly, and it's intended for both expert developers as well as those just getting started. It has five core concepts:</p>\n<h3>1. Real-time Synchronization</h3>\n<p>Firebase takes a new approach to the way data is moved around an app. Rather than using a traditional request / response model, it works by synchronizing data between devices. To respond to data changes, you attach callback functions. When data is modified, local callbacks are triggered immediately to ensure your app is responsive regardless of network latency, and remote callbacks are triggered within milliseconds. Synchronized data is also persisted to the Firebase cloud, allowing new clients that connect later to be immediately up-to-date.</p>\n<h3>2. Data Accessibility</h3>\n<p>Data stored in Firebase is easy to access and use from any device. Data is stored as JSON, and <a href=\"https://www.firebase.com/docs/data-structure.html\">every piece of data has its own URL</a> which can be used in three important ways. First, Firebase's client libraries allow you to specify the data to synchronize simply by using the appropriate URL. Second, every Firebase URL can be <a href=\"https://samplechat.firebaseio-demo.com/\">entered into a browser</a> to view the data and watch it update in real-time. Finally, every Firebase URL acts as a <a href=\"https://www.firebase.com/docs/rest-api-quickstart.html\">REST endpoint</a> to allow for easy integration with any existing service.</p>\n<h3>3. Automatic Scaling</h3>\n<p>The Firebase API is built from the ground up for performance and scale. You simply specify which data you would like to synchronize with each client, and Firebase calculates the minimum set of updates that need to be sent to keep everyone in sync. In addition, all Firebase API functions are designed to scale linearly with the size of the data being synchronized and to shard well into a distributed cloud environment. More importantly, Firebase handles all of the scaling and operations for you. Your Firebase app will scale automatically from its first user to its first million without needing any code changes.</p>\n<h3>4. First-class Data Security</h3>\n<p>Unlike traditional applications that intermix security code with application code, Firebase treats security as a first-class feature. You define your security policies in one place using a <a href=\"https://www.firebase.com/docs/security/index.html\">flexible rules language</a>, and Firebase ensures that these policies are consistently enforced across all parts of your application. Having all security logic in one place allows for easy auditing and helps you avoid security mistakes. In addition, Firebase supports SSL on all clients, uses strong cryptographic hashes for signatures, applies modern best practices when managing passwords, and handles all of the other mundane but important details of keeping your data safe.</p>\n<h3>5. Servers are Optional</h3>\n<p>Firebase's synchronization approach and first-class security features can provide all of the data storage, control, and transmission needs of most apps. In fact, in many cases, Firebase can completely replace your server-side components. This means that you no longer need to build complicated backend software and can instead build your apps entirely with client-side HTML, CSS, and JavaScript.</p>\n<p>This does not mean, however, that you can't run your own servers. Firebase plays nicely with existing systems through its <a href=\"https://www.firebase.com/docs/rest-api-quickstart.html\">REST API</a> and <a href=\"https://www.firebase.com/docs/nodejs-quickstart.html\">Node.js library</a>.</p>",
            "logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/serviceproviders/firebase-logo.png",
            "website": "https://www.firebase.com",
            "blog": "http://blog.firebase.com/",
            "blogrss": "",
            "twitter": ""
        },
        {
            "ID": "98",
            "name": "PubNub",
            "details": "<p><span>PubNub is a blazingly fast cloud-hosted messaging service for building real-time web and mobile apps. Hundreds of apps and thousands of developers rely on PubNub for delivering “human-perceptive” real-time experiences that scale to millions of users worldwide. PubNub delivers the infrastructure needed to build amazing MMO games, social apps, business collaborative solutions, and more.</span></p>",
            "logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/serviceproviders/pubnub-large.png",
            "website": "http://www.pubnub.com/",
            "blog": "",
            "blogrss": "http://blog.pubnub.com/feed/",
            "twitter": "https://twitter.com/pubnub"
        },
        {
            "ID": "44",
            "name": "Pusher",
            "details": "<p class=\"intro\">Pusher is a hosted service that allows developers to quickly and easily add realtime functionality into their web and mobile applications.</p>\n<p>Our goal is to take away the management and operations of a company's realtime infrastructure, so that developers can focus energy on the features of their product that make them unique.</p>\n<p>Realtime is an important trend in application development and leads to greater engagement and retention with your customers. Our service allows people to stay involve with an application, getting new data as it is created without having to refresh.</p>\n<p>We provide <a href=\"http://pusher.com/docs/client_libraries\">client libraries</a> for HTML5, iOS and Android to allow clients to connect to our service, and a simple REST API for publishing messages to them from your server (we have libraries <a href=\"http://pusher.com/docs/server_libraries\">in lots of languages</a>). We allow developers to have the benefits of realtime without having to re-architect their applications, or learn new languages and frameworks.</p>\n<p>Our customers use the service to build games, collaborative tools, social networks and we are used by startups and large companies alike.</p>\n<p>Please <a href=\"http://pusher.com/about/contact\">get in touch with us</a> if you want to understand how your applications can benefit from being realtime.</p>\n<p>Alternatively, sign up for a FREE account and see how easy it is to start pushing messages to your applications.</p>",
            "logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/serviceproviders/pusher-logo.png",
            "website": "http://pusher.com/",
            "blog": "http://blog.pusher.com/",
            "blogrss": "http://feeds.feedburner.com/pusherblog",
            "twitter": ""
        },
        {
            "ID": "89",
            "name": "SuperFeedr",
            "details": "<p>Superfeedr fetches and parses RSS or Atom feeds on behalf of its users and then pushes them the new entries in these feeds. Superfeedr implements most of the current Real-time technologies and guarantees an entry detection time inferior to 15 min. Superfeedr has both an XMPP and a PubSubHubbub API.</p>",
            "logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/serviceproviders/superfeedr-logo.png",
            "website": "http://superfeedr.com/",
            "blog": "http://blog.superfeedr.com/",
            "blogrss": "http://blog.superfeedr.com/atom.xml",
            "twitter": "http://twitter.com/superfeedr"
        }
    ]
}